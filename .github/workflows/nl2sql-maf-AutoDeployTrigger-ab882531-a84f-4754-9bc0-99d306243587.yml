name: Trigger auto deployment for nl2sql-maf

on:
  push:
    branches: [main]
    paths:
      - "**"
      - ".github/workflows/nl2sql-maf-AutoDeployTrigger-ab882531-a84f-4754-9bc0-99d306243587.yml"
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: self-hosted
    permissions:
      id-token: write # OIDC 사용 시 필요
      contents: read

    env:
      # ACR 로그인 서버와 이미지 태그(커밋 SHA)를 환경변수로 정의
      ACR_NAME: mytestacr1
      ACR_LOGIN_SERVER: mytestacr1.azurecr.io
      IMAGE_NAME: nl2sql-maf
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.NL2SQLMAF_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.NL2SQLMAF_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.NL2SQLMAF_AZURE_SUBSCRIPTION_ID }}

      - name: ACR Login (no password)
        run: az acr login --name $ACR_NAME

      - name: Build (Dockerfile) & Push to ACR & Deploy to Container Apps
        uses: azure/container-apps-deploy-action@v2
        with:
          # 빌드 입력
          appSourcePath: ${{ github.workspace }}
          dockerfilePath: Dockerfile

          registryUrl: ${{ env.ACR_LOGIN_SERVER }}

          # 빌드될 이미지: <registry>/<repo>:<tag> 형식으로 교정
          imageToBuild: ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

          # 배포 대상 Container App
          containerAppName: nl2sql-maf
          resourceGroup: my-test-resource-group-1

          # (선택) 앱 설정을 YAML로 관리하려면 아래 주석 해제 후 파일 경로 지정
          # yamlConfigPath: infra/containerapp.yaml
